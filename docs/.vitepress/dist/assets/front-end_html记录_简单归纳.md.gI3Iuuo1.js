import{_ as a,o as t,c as e,R as l}from"./chunks/framework.9GQK9YA0.js";const p=JSON.parse('{"title":"HTML 常见问题总结","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/html记录/简单归纳.md","filePath":"front-end/html记录/简单归纳.md"}'),r={name:"front-end/html记录/简单归纳.md"},i=l('<h1 id="html-常见问题总结" tabindex="-1">HTML 常见问题总结 <a class="header-anchor" href="#html-常见问题总结" aria-label="Permalink to &quot;HTML 常见问题总结&quot;">​</a></h1><p>[TOC]</p><h5 id="什么是-doctype-它的作用是什么" tabindex="-1">什么是 DOCTYPE,它的作用是什么? <a class="header-anchor" href="#什么是-doctype-它的作用是什么" aria-label="Permalink to &quot;什么是 DOCTYPE,它的作用是什么?&quot;">​</a></h5><p><code>DOCTYPE</code>是指 HTML 的文档声明，它负责告诉浏览器使用哪一个 HTML 版本来解析文档。如果没有声明 DOCTYPE，那么浏览器就会采用最大兼容模式来解析网页，称为<code>怪异模式</code>，这样的弊端是会降低解析效率，而且在解析过程中容易出现一些 BUG。</p><h5 id="对于-html-语义化的理解" tabindex="-1">对于 HTML 语义化的理解 <a class="header-anchor" href="#对于-html-语义化的理解" aria-label="Permalink to &quot;对于 HTML 语义化的理解&quot;">​</a></h5><p>HTML 标签的语义化指的是使页面的内容变得结构化页面元素有含义，一方面便于浏览器来解析，另一方面也便于阅读代码。 它有以下优点:</p><ul><li>它可以在没有 css 的情况下也以一种文档的格式来展示，使页面展示出一种清晰的结构</li><li>有利于 SEO 和搜索引擎建立良好的沟通，有利于爬虫抓取更多有用的信息，因为爬虫是依赖于标签来确定上下文和各个关键字的权重的</li><li>便于开发团队的开发和维护，语义化由于它的可读性，可以减少团队开发时的差异化</li></ul><h5 id="src和href的区别" tabindex="-1">src和href的区别 <a class="header-anchor" href="#src和href的区别" aria-label="Permalink to &quot;src和href的区别&quot;">​</a></h5><p>src和href都用于引入外部资源 它们的区别在于:</p><ul><li>src:全称为<code>source</code>一般用于img,video,audio,script元素，这些元素通过指向外部的资源的来源地址进行加载,加载完的内容会嵌入当前引入source的元素,在请求src资源时,浏览器会将资源下载并且应用到当前文档中,当浏览器在请求并下载资源时,它会停止对其它资源的加载,直到当前资源被下载并且应用到文档中,这也解释了为什么script引入的JS脚本一般都会在文档的尾部而不是头部.</li><li>href:全称为<code>hyper reference</code>,意思是超链接,指向了网络资源,当浏览器识别到href时,浏览器会并行处理对href资源的请求,并不会停止对于当前文档的加载,href一般被用于a,link元素中.</li></ul><h5 id="b和strong-i和em的区别" tabindex="-1">b和strong,i和em的区别 <a class="header-anchor" href="#b和strong-i和em的区别" aria-label="Permalink to &quot;b和strong,i和em的区别&quot;">​</a></h5><ul><li>b指的是强调内容,而strong指的是标明重点内容,在网页阅读时,当阅读到strong标签包裹的内容时,语气会加重.</li><li>i是italic(斜体)的简写,是早期的斜体元素,表示内容的展示为斜体;而em是emphasize(强调)的缩写,表示强调的文本.</li></ul><h5 id="严格模式和混杂模式" tabindex="-1">严格模式和混杂模式 <a class="header-anchor" href="#严格模式和混杂模式" aria-label="Permalink to &quot;严格模式和混杂模式&quot;">​</a></h5><ul><li>严格模式:浏览器以最高标准进行文档的解析</li><li>混杂模式:页面以宽松向下的方式进行解析和显示</li></ul><h5 id="前端页面的三层构成" tabindex="-1">前端页面的三层构成 <a class="header-anchor" href="#前端页面的三层构成" aria-label="Permalink to &quot;前端页面的三层构成&quot;">​</a></h5><ul><li>结构层(structural layer):指的是网页的骨架,由html超文本标记语言来构成的.</li><li>表示层(presentation layer):指的是网页的外观,由css来构成</li><li>行为层(behavior layer):指的是网页和用户的交互性,用户对网页进行一些操作,网页给出用户反馈,是由JS来构成的</li></ul><h5 id="iframe的作用和优缺点" tabindex="-1">iframe的作用和优缺点 <a class="header-anchor" href="#iframe的作用和优缺点" aria-label="Permalink to &quot;iframe的作用和优缺点&quot;">​</a></h5><p>iframe被称作嵌入式框架,它可以把一个网页的框架和内容嵌入到另一个网页内. 优点:它可以用来处理一些加载比较缓慢的内容 缺点:</p><ul><li>iframe的加载会阻塞主页面的onLoad事件</li><li>iframe和主页面共享一个连接池,这样会影响页面的并行加载.可以通过JS来动态给iframe添加src来解决这个问题,这样也可以解决iframe阻塞主页面的onLoad事件</li><li>iframe的使用会产生多个页面,不易管理</li><li>浏览器的后退按钮对于iframe没有作用</li><li>无法被一些搜索引擎识别</li></ul><h5 id="img上的alt和title" tabindex="-1">img上的alt和title <a class="header-anchor" href="#img上的alt和title" aria-label="Permalink to &quot;img上的alt和title&quot;">​</a></h5><p>img上的title属性指的是鼠标指针悬停在图片上显示的内容 alt(alternate)指的是图片在无法正常加载时所显示的内容</p><h5 id="html5中新增的特性和移除的元素" tabindex="-1">html5中新增的特性和移除的元素 <a class="header-anchor" href="#html5中新增的特性和移除的元素" aria-label="Permalink to &quot;html5中新增的特性和移除的元素&quot;">​</a></h5><p>HTML5中新增的特性主要是关于图像,位置,储存,多任务等功能的添加:</p><ul><li>语义化标签:article,nav,footer,header等等</li><li>视频video,音频audio</li><li>画布canvas</li><li>表单控件,date,time,email等</li><li>地理</li><li>本地离线储存,localStorage长期储存,浏览器关闭后数据不丢失,sessionStorage的数据在浏览器关闭后自动删除</li><li>拖拽释放</li></ul><p>删除的元素:</p><ul><li>纯表现的元素:basefont、font、s、strike、tt、u、big、center</li><li>对可选用性产生负面影响的元素:frame、frameset、noframes</li></ul><h5 id="a标签除了导航的其他作用" tabindex="-1">a标签除了导航的其他作用 <a class="header-anchor" href="#a标签除了导航的其他作用" aria-label="Permalink to &quot;a标签除了导航的其他作用&quot;">​</a></h5><p>a标签除了导航，还可以用来手机拨号<code>&lt;a href=&quot;tel:110&quot;&gt;110&lt;/a&gt;</code>或者发短信<code>&lt;a href=&quot;sms:110&quot;&gt;110&lt;/a&gt;</code> 当然，a元素最常见的就是用来做锚点和 下载文件。</p><h5 id="svg和canvas的区别" tabindex="-1">svg和canvas的区别 <a class="header-anchor" href="#svg和canvas的区别" aria-label="Permalink to &quot;svg和canvas的区别&quot;">​</a></h5><p>svg:svg指的是可缩放矢量图形(Scalable Vector Graphics)，它是基于XML语言实现的，这意味着可以在任意文件中创建SVG图像。和JPG，JPEG，PNG文件不同，它是矢量图而不是位图，这意味着它的图像可以无限放大并不会失真。</p><p>canvas:canvas本质是H5提供的一个标签，本身不具备绘图能力，必须通过JS脚本进行绘图</p><p><strong>二者的区别：</strong></p><table><thead><tr><th>SVG</th><th>Canvas</th></tr></thead><tbody><tr><td>不依赖分辨率（矢量图）</td><td>依赖分辨率（位图）</td></tr><tr><td>每一个图形都是一个 <code>DOM</code>元素</td><td>单个HTML元素，相当于<code>&lt;img&gt;</code></td></tr><tr><td>支持事件处理器</td><td>不支持事件处理器</td></tr><tr><td>适合大型渲染区域的应用程序(谷歌地图)</td><td>文本渲染能力差</td></tr><tr><td>可以通过脚本和CSS进行修改</td><td>只能通过脚本修改</td></tr><tr><td>对象数量较小 (<code>&lt;10k</code>)、图面更大时性能更佳</td><td>图面较小，对象数量较大（<code>&gt;10k</code>）时性能最佳</td></tr><tr><td>不适合游戏应用</td><td>适合图像密集型的游戏应用</td></tr></tbody></table>',33),o=[i];function d(h,s,c,n,m,u){return t(),e("div",null,o)}const b=a(r,[["render",d]]);export{p as __pageData,b as default};
